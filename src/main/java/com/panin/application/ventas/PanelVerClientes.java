/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.panin.application.ventas;

import com.formdev.flatlaf.FlatClientProperties;
import com.panin.application.utilities.SearchHeader2;
import com.panin.controladores.ControladorCliente;
import com.panin.entidades.Cliente;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author USUARIO
 */
public class PanelVerClientes extends javax.swing.JPanel implements SearchHeader2.BuscadorListener {

    /**
     * Creates new form PanelVerClientes
     */
    public PanelVerClientes() {
        initComponents();
        
        this.putClientProperty(FlatClientProperties.STYLE, ""
                + "arc:25;"
                + "background:$background"
        );
        
        table.getTableHeader().putClientProperty(FlatClientProperties.STYLE, ""
                + "height:30;"
                + "hoverBackground:null;"
                + "pressedBackground:null;"
                //                + "dropLineShortColor:$Menu.background;"
                + "font:bold;"
                + "background:$Menu.background;"
        );
        
        table.putClientProperty(FlatClientProperties.STYLE, ""
                + "rowHeight:30;"
                + "showHorizontalLines:true;"
                + "showVerticalLines:true;"
                + "intercellSpacing:0,1;"
                //                + "dropLineShortColor:$Menu.background;"
                + "cellFocusColor:$TableHeader.hoverBackground;"
                + "selectionBackground:$TableHeader.hoverBackground;"
                + "selectionForeground:$Table.foreground;"
                + "background:$Login.background;"
        );
        
        table.setEnabled(false);
        searchHeader21.setBackground(getBackground());
        searchHeader21.setListener(this);
        init();
        redimensionarLista();
        actualizarLista();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchHeader21 = new com.panin.application.utilities.SearchHeader2();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(table);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(searchHeader21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(searchHeader21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 737, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private com.panin.application.utilities.SearchHeader2 searchHeader21;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
  private DefaultTableModel modelTable;
    private List<Cliente> clientes;
    
    private void init() {
        String[] columnas = new String[]{
            "Codigo","Cedula", "Nombre", "Apellido", "Telefono", "Email", "Fecha de Nacimiento", "Direcci√≥n"};
        modelTable = new DefaultTableModel(columnas, 0);
        this.table.setModel(modelTable);
    }
    
    private void actualizarLista() {
        
        modelTable.setRowCount(0);
        ControladorCliente controladorCliente = new ControladorCliente();
        this.clientes = controladorCliente.obtenerClientes();
        SimpleDateFormat formatter = new SimpleDateFormat("dd-MM-yyyy");
//        marcas.sort(Collections.reverseOrder());

        for (Cliente fila : clientes) {
            String fecha = formatter.format(fila.getFechaNacimiento());
            modelTable.addRow(new Object[]{fila.getId().toString(), fila.getCedula().toString(), fila.getNombre(), fila.getApellido(), fila.getTelefono(),
                fila.getEmail(), fecha, fila.getDireccion()});
        }
        
    }
    
    private void redimensionarLista() {
        
        TableColumnModel columnModel = table.getColumnModel();
        TableColumn columnaCantidad = columnModel.getColumn(0);
        columnaCantidad.setPreferredWidth(10);
            columnaCantidad = columnModel.getColumn(1);
        columnaCantidad.setPreferredWidth(10);
        columnaCantidad = columnModel.getColumn(2);
        columnaCantidad.setPreferredWidth(40);
        columnaCantidad = columnModel.getColumn(3);
        columnaCantidad.setPreferredWidth(40);
        columnaCantidad = columnModel.getColumn(4);
        columnaCantidad.setPreferredWidth(20);
        columnaCantidad = columnModel.getColumn(5);
        columnaCantidad.setPreferredWidth(100);
        columnaCantidad = columnModel.getColumn(6);
        columnaCantidad.setPreferredWidth(30);
        columnaCantidad = columnModel.getColumn(7);
        columnaCantidad.setPreferredWidth(150);
    }
    
    @Override
    public void onTextoIngresado(String texto) {
        filtarLista(texto);
    }
    
    private void filtarLista(String texto) {
        SimpleDateFormat formatter = new SimpleDateFormat("dd-MM-yyyy");
        modelTable.setRowCount(0);
        ControladorCliente controladorCliente = new ControladorCliente();
        
        List<Cliente> clienteFiltradas = (List<Cliente>) clientes.stream()
                .filter(cliente -> cliente.getNombre().toLowerCase().contains(texto.toLowerCase())
                || cliente.getApellido().toLowerCase().contains(texto.toLowerCase())
                || cliente.getId().toString().contains(texto) 
                || cliente.getCedula().toString().contains(texto)
                || cliente.getTelefono().contains(texto) 
                || formatter.format(cliente.getFechaNacimiento()).contains(texto)
                || cliente.getEmail().contains(texto))
                .collect(Collectors.toList());
//        marcas.sort(Collections.reverseOrder());

        for (Cliente fila : clienteFiltradas) {
            String fecha = formatter.format(fila.getFechaNacimiento());
            modelTable.addRow(new Object[]{fila.getId().toString(), fila.getCedula().toString(), fila.getNombre(), fila.getApellido(), fila.getTelefono(),
                fila.getEmail(), fecha, fila.getDireccion()});
        }
        
    }
}
