/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.panin.application.form.productos;

import com.panin.application.form.other.Card;
import com.panin.application.form.other.Model_Card;
import com.panin.controladores.ControladorProductos;
import com.panin.controladores.ControladorReceta;
import com.panin.dto.formAgregarInsumoProductoDTO;
import com.panin.entidades.InsumoRecetas;
import com.panin.entidades.Producto;
import com.panin.entidades.Recetas;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author ricke
 */
public class panelMostrarProductos extends javax.swing.JPanel {

    /**
     * Creates new form panelMostrarProductos
     */
    public panelMostrarProductos() {
        initComponents();
        init();
    }

    
    public void init(){
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        panel = new javax.swing.JPanel();

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 711, Short.MAX_VALUE)
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 402, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(panel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    public void mostrarProductos(String clase){
        
        ControladorProductos cp = new ControladorProductos();
        productos = new ArrayList<Producto>();
        productos = cp.obtenerProductos();
//        cp.cerrarSesion();

        ControladorReceta cr = new ControladorReceta();

        String formClass = clase;
        List<formAgregarInsumoProductoDTO> listaInsumosReceta = new ArrayList<formAgregarInsumoProductoDTO>();

        for (Producto producto : productos) {

//                 String receta = "";
            Recetas r = new Recetas();
            String tipoProducto = "NA";
            if (producto.getTipo() != null) {
                tipoProducto = producto.getTipo().name();
                if (producto.getTipo().toString().equalsIgnoreCase("Elaborado")) {

                    /*TODO
                      * Todos los productos elaborados DEBEN tener una receta asociada
                     */
                    r = cr.obtenerRecetaPorId(producto.getIdReceta());
                    listaInsumosReceta = new ArrayList<formAgregarInsumoProductoDTO>();

                    for (InsumoRecetas ir : r.getInsumoRecetasCollection()) {

                        formAgregarInsumoProductoDTO dto = new formAgregarInsumoProductoDTO();

                        dto.setCantidad(ir.getCantidad().doubleValue());
                        dto.setInsumo(ir.getIdInsumo());
                        dto.setUnidadMedidad(ir.getUnidadMedida());

                        listaInsumosReceta.add(dto);

                    }
                }
            }
            panel.add(new Card(new Model_Card(new javax.swing.ImageIcon(getClass().getResource(producto.getRutaImagen())), producto.getDescripcion(), "", tipoProducto, listaInsumosReceta, producto), getBackground(), formClass));

        }
//        cr.cerrarSesion();

        panel.revalidate();
        panel.repaint();
        
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panel;
    // End of variables declaration//GEN-END:variables
    private List<Producto> productos;



}
